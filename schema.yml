openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: Logs in a user and returns JWT tokens.
      summary: Login user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      description: Registers a new user and sends a verification code via email.
      summary: Register a new user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
  /api/auth/resend-verification/:
    post:
      operationId: api_auth_resend_verification_create
      description: Generates a new verification code and sends it to the user's email.
      summary: Resend verification code
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendCodeResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
  /api/auth/verify-email/:
    post:
      operationId: api_auth_verify_email_create
      description: Verifies the user's email using the code sent via email and returns
        JWT tokens.
      summary: Verify user's email
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Verification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Verification'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    LoginResponse:
      type: object
      properties:
        message:
          type: string
        refresh:
          type: string
        access:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - access
      - message
      - refresh
      - user
    RegisterResponse:
      type: object
      properties:
        message:
          type: string
        user_id:
          type: integer
      required:
      - message
      - user_id
    ResendCodeResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    RoleEnum:
      enum:
      - user
      - admin
      - authority
      type: string
      description: |-
        * `user` - User
        * `admin` - Admin
        * `authority` - Authority
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
        phone:
          type: string
          nullable: true
          maxLength: 128
        role:
          $ref: '#/components/schemas/RoleEnum'
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        serial_number:
          type: string
          nullable: true
          maxLength: 100
        device_image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
        lost_location:
          type: string
          nullable: true
          maxLength: 255
      required:
      - email
      - id
      - password
      - username
    Verification:
      type: object
      properties:
        user_id:
          type: integer
        code:
          type: string
          maxLength: 6
      required:
      - code
      - user_id
    VerifyResponse:
      type: object
      properties:
        message:
          type: string
        refresh:
          type: string
        access:
          type: string
      required:
      - access
      - message
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
